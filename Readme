# Helm Chart Files and Explanations
# Chart.yaml
apiVersion: v2
name: webappchart
description: A Helm chart for MySQL and User Management Web App
type: application
version: 0.1.0
appVersion: "1.1.0"


Explanation:

This file contains chart metadata.

name is the chart name, description explains the chart, version is the Helm chart version, and appVersion is the version of the actual app.

Helm uses this file to identify and manage the chart.

️# values.yaml
mysql:
  image: "mysql:5.6"
  replicas: 1
  containerPort: 3306
  pvcName: "my-pvc"
  rootPassword: "dbpassword11"
  storage: 3Gi

usermgmtWebApp:
  image: "stacksimplify/kube-usermgmt-webapp:1.0.0-MySQLDB"
  replicas: 3
  containerPort: 8080
  initContainerImage: "busybox:1.31"
  db:
    name: webappdb
    username: root
    password: dbpassword11
    hostname: mysql
    port: 3306


Explanation:

This file defines default values used by all templates.

Example: mysql.image is used in mysql-deployment.yaml.

Users can override these values with their own file (my-values.yaml) when installing the chart.

️# templates/_helpers.tpl
{{- define "webappchart.fullname" -}}
{{ .Release.Name }}-{{ .Chart.Name }}
{{- end -}}


Explanation:

Defines helper functions for naming and labels.

This avoids hardcoding names and ensures resources are consistently named.

Example: Instead of mysql, the resource could be named myrelease-webappchart-mysql.

# templates/mysql-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mysql
spec:
  replicas: {{ .Values.mysql.replicas }}
  template:
    spec:
      containers:
        - name: mysql
          image: {{ .Values.mysql.image }}
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysql.rootPassword }}


Explanation:

Defines a Deployment for MySQL database.

Uses values from values.yaml (image, replicas, root password).

Ensures MySQL pods are created and managed by Kubernetes.

# templates/mysql-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mysql
spec:
  clusterIP: {{ .Values.mysqlservice.service.clusterIP }}
  ports:
    - port: {{ .Values.mysqlservice.service.port }}
      targetPort: {{ .Values.mysqlservice.service.targetPort }}


Explanation:

Creates a Service for MySQL.

Type is ClusterIP: None (headless service), which allows the webapp to connect directly to MySQL pods.

Exposes port 3306 internally in the cluster.

️# templates/usermgmt-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-usermgmt
spec:
  replicas: {{ .Values.usermgmtWebApp.replicas }}
  template:
    spec:
      initContainers:
        - name: init-db-check
          image: {{ .Values.usermgmtWebApp.initContainerImage }}
      containers:
        - name: usermgmt
          image: {{ .Values.usermgmtWebApp.image }}
          env:
            - name: DB_HOSTNAME
              value: {{ .Values.usermgmtWebApp.db.hostname }}


Explanation:

Defines Deployment for User Management WebApp.

Runs an initContainer to wait until MySQL is ready.

Main container runs the webapp, using environment variables from values.yaml.

Ensures 3 replicas of the app are running.

️# templates/usermgmt-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-usermgmt
spec:
  type: {{ .Values.userwebappservice.type }}
  ports:
    - port: {{ .Values.userwebappservice.port }}
      targetPort: {{ .Values.userwebappservice.targetport }}


Explanation:

Creates a Service for the WebApp.

Type is LoadBalancer, which exposes the app externally.

Maps port 80 to the app’s internal port 8080.

Users can access the app using the LoadBalancer’s external IP.

️# templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.mysql.pvcName }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.mysql.storage }}


Explanation:

Defines a PersistentVolumeClaim (PVC) for MySQL.

Ensures MySQL data is stored persistently, even if pods are restarted.

Uses storage size from values.yaml (default: 3Gi).
